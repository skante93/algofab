
apiVersion: v1
kind: Pod
metadata:
  name: ldap
  namespace: algofab
  labels:
    app: ldap
spec:
  securityContext:
    runAsUser: 1002
  serviceAccountName: algofab
  containers:
    - name: ldap
      image: skante/ldap
      imagePullPolicy: Always
      # envFrom:
      #   - configMapRef:
      #       name: ldap
      volumeMounts:
        - mountPath: /data
          name: nfs-pvc
          subPath: data/ldap
        
        # - mountPath: /setup
        #   name: nfs-pvc
        #   subPath: docker/ldap/conf
  volumes:
    - name: nfs-pvc
      persistentVolumeClaim:
        claimName: pvc0001

---

apiVersion: v1
kind: Pod
metadata:
  name: mongo
  namespace: algofab
  labels:
    app: mongo
spec:
  serviceAccountName: algofab
  securityContext:
    runAsUser: 999
  containers:
    - name: db
      image: mongo
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /data/db
          name: nfs-pvc
          subPath: data/mongo
  volumes:
    - name: nfs-pvc
      persistentVolumeClaim:
        claimName: pvc0001
---

apiVersion: v1
kind: Pod
metadata:
  name: im
  namespace: algofab
  labels:
    app: im
spec:
  securityContext:
    runAsUser: 1002
  # initContainers:
  #   - name: busybox
  #     image: busybox
  #     command:
  #       - chown
  #       - -R
  #       - 1000:1000
  #       - /accounts/*
  #     volumeMounts:
  #       - name: nfs-pvc
  #         mountPath: /accounts
  #         subPath: data/accounts
  serviceAccountName: algofab
  containers:
    - name: im
      image: skante/tlmkpl
      imagePullPolicy: Always
      command: ["./run.sh", "IM-Server"]
      
      volumeMounts:
        - mountPath: /home/admin/algofab/
          name: nfs-pvc
          subPath: docker/algofab/

        - mountPath: /accounts
          name: nfs-pvc
          subPath: data/accounts
  volumes:
    - name: nfs-pvc
      persistentVolumeClaim:
        claimName: pvc0001

---

apiVersion: v1
kind: Pod
metadata:
  name: rh
  namespace: algofab
  labels:
    app: rh
spec:
  serviceAccountName: algofab
  containers:
    - name: rh
      image: skante/tlmkpl
      imagePullPolicy: Always
      command: ["./run.sh", "RH-Server"]
      volumeMounts:
        - mountPath: /home/admin/algofab/
          name: nfs-pvc
          subPath: docker/algofab/
  volumes:
    - name: nfs-pvc
      persistentVolumeClaim:
        claimName: pvc0001
---

apiVersion: v1
kind: Pod
metadata:
  name: portal
  namespace: algofab
  labels:
    app: portal
spec:
  serviceAccountName: algofab
  containers:
    - name: portal
      image: skante/tlmkpl
      imagePullPolicy: Always
      command: ["./run.sh", "Portal"]
      envFrom:
        - configMapRef:
            name: ldap-config
      volumeMounts:
        - mountPath: /home/admin/algofab/
          name: nfs-pvc
          subPath: docker/algofab/
  volumes:
    - name: nfs-pvc
      persistentVolumeClaim:
        claimName: pvc0001

---

apiVersion: v1
kind: Pod
metadata:
  name: proxy
  namespace: algofab
  labels:
    app: proxy
spec:
  securityContext:
    fsGroup: 1002
  serviceAccountName: algofab
  containers:
    - name: nginx
      image: nginx
      imagePullPolicy: Always
      # command: ["/bin/sh"]
      # args: ["-c", "while true; do echo hello; sleep 10;done"]
      # envFrom:
      #   - configMapRef:
      #       name: ldap
      volumeMounts:
        - mountPath: /etc/nginx/
          name: nfs-pvc
          subPath: data/proxy
  volumes:
    - name: nfs-pvc
      persistentVolumeClaim:
        claimName: pvc0001
