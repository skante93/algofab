#!/bin/bash

NODES=("ws67-int-en2")
POD_NETWORK="$1"
TAINT_MASTER="$2"
KUBE_VERSION="1.14.3"

echo "POD_NETWORK : $POD_NETWORK"
echo "TAINT_MASTER : $TAINT_MASTER"



function reset_kubeadm(){
	sudo kubeadm reset
	sudo service docker stop
	sudo iptables -F && sudo iptables -t nat -F && sudo iptables -t mangle -F && sudo iptables -X
	sudo swapoff -a
	sudo service docker start
	
	for n in ${NODES[*]}
	do
		echo "######## Resetting kubeadm on $n ########"
		ssh $n sudo kubeadm reset
		ssh $n sudo service docker stop
		ssh $n sudo iptables -F && sudo iptables -t nat -F && sudo iptables -t mangle -F && sudo iptables -X
		ssh $n sudo swapoff -a
		ssh $n sudo service docker start
	done
}

function init_kubeadm(){
	
	sudo kubeadm init --pod-network-cidr=$1 --token-ttl 0
        mkdir -p $HOME/.kube
        sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config
}


function setup_with_calico() {
	init_kubeadm "192.168.0.0/16"
        #sudo kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml
	sudo kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml
}

function setup_with_canal(){
	init_kubeadm "10.244.0.0/16"
        #sudo kubectl apply -f https://raw.githubusercontent.com/projectcalico/canal/master/k8s-install/1.7/rbac.yaml
        #sudo kubectl apply -f https://raw.githubusercontent.com/projectcalico/canal/master/k8s-install/1.7/canal.yaml
	sudo kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/canal.yaml
}

function setup_with_flannel(){
	init_kubeadm "10.244.0.0/16"
        #sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.0/Documentation/kube-flannel.yml
	kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml
}

function setup_with_romana(){
	init_kubeadm ""
	sudo kubectl apply -f https://raw.githubusercontent.com/romana/romana/master/containerize/specs/romana-kubeadm.yml
}


function setup_with_weave(){
	init_kubeadm ""
	export kubever=$(kubectl version | base64 | tr -d '\n')
	sudo kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"
}


function get_token (){
	echo $(sudo kubeadm token list | grep "The default bootstrap token generated by 'kubeadm init'" | awk '{print $1}')
}

function add_kubedns_configmap(){
	KUBEDNS_IP=`kubectl get svc kube-dns -n kube-system | awk 'FNR==2{print $2}'`
	sudo kubectl create -f - <<EOF
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-dns
  namespace: kube-system
data:
  stubDomains: |
    {"tera-mkpl.fr": ["$KUBEDNS_IP"]}
  upstreamNameservers: |
    ["8.8.8.8", "8.8.4.4"]
EOF
	
}

reset_kubeadm


if [ "$POD_NETWORK" == "calico" ]; then
	echo "######## Init kubeadm with CALICO ########"
	setup_with_calico
elif [ "$POD_NETWORK" == "canal" ]; then
	echo "######## Init kubeadm with CANAL ########"
	setup_with_canal
elif [ "$POD_NETWORK" == "flannel" ]; then
	echo "######## Init kubeadm with FLANNEL ########"
	setup_with_flannel
elif [ "$POD_NETWORK" == "romana" ]; then
	echo "######## Init kubeadm with ROMANA ########"
	setup_with_romana
elif [ "$POD_NETWORK" == "weave" ]; then
	echo "######## Init kubeadm with WEAVE ########"
	setup_with_weave
fi

if [ "$TAINT_MASTER" == "1" ] || [ "$TAINT_MASTER" == "yes" ]; then
	sudo kubectl taint nodes --all node-role.kubernetes.io/master-
fi

add_kubedns_configmap


TKN=`get_token`

echo "TOKEN : $TKN"
MASTER_IP=$(hostname --ip)

for n in ${NODES[*]} 
do
	echo "######### Making $n join #########"
	#ssh $n sudo kubeadm join --token $TKN $MASTER_IP:6443 
	if [ $KUBE_VERSION == "1.14.3" ]; then
		cmd="ssh $n sudo kubeadm join --token $TKN $MASTER_IP:6443 --discovery-token-unsafe-skip-ca-verification"
		echo "# command is : $cmd #"
		$cmd
	fi

	ssh $n mkdir -p ~/.kube
	ssh $n sudo cp -f /etc/kubernetes/kubelet.conf ~/.kube/config
	ssh $n sudo chown $USER:$USER ~/.kube/config
done


kubectl label node/$(hostname) tache=master1

i=1
for n in ${NODES[*]}
do
	kubectl label node/$n tache=node$i
	i=$((i+1))
done
