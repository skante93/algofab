<!DOCTYPE html>
<html>
  	<head>
		<% include ../../partials/head %>
    
  	</head>
  	<body>
    	<% include ../../partials/header %>

    	<div class="container">
   					<h3> Tests </h3>
					<p>
						At this point in the tutorial you already created an algorithm <a href="">online</a> and created one version of it after designing an application, creating a REST API to go along with it, Dockerizing them and then creating its manifest. After those steps we now have to check that our algorithm work as expected. 
					</p>

					<p>
						<h4>Demo</h4>
						<p>
							To see the demo, visit your HelloWorld page (from dropdown on you username -> my contributions -> "visit page" under HelloWorld box) and look for section "Versions". You should see an accordion there with as headers the versions of HelloWorld. Click on 1.0.0 and at the bottom of comment (same as the field in the JSON manifest if you look closely), click on the link "More about this version". You should end up in the Demo page where there are four tabs. <br>
							<ul>
								<li>
									<b>General Information</b> : this Tab introduces your algorithm to users. The page is made of the field "Description" of your Algorithm plus the field "comment" from the version's manifest.
								</li>
								<li>
									<b>API</b> : this Tab tells users how to use your Algorithm notably in execution mode. The API is taken from the field API of the manifest.
								</li>
								<li>
									<b>Use</b> : this Tab shows the demo of the algorithm inside an iframe.
								</li>
								<li>
									<b>Report a bug</b> : this Tab lets users tell your if something is wrong with your Algo (if not working as expected).
								</li>
							</ul>
						</p>
						<p>
							Test your Demo in the "Use" Tab to see if everything is fine.
						</p>
					</p>
					<p>
						<h4>Execution</h4>
						<p>
							Based on the content of <a href="/docs/execution-mode">Execution mode</a>, you should <a href="/docs/execution-mode#get-token">get a token</a> and test you API works according to the description you gave (Of course while setting up you algorithm you must have tested that everything works before uploading your work on the platform). These are some example commands you can try with <code>cURL</code> :

							<table class="table table-bordered api-table">
				              	<thead>
				                	<tr>
					                  	<th> Request </th>
					                  	<th> Expected response </th>
					                </tr>
				              	</thead>
				              	<tbody>
				              		<tr>
					                  	<td> <code>curl -H "Authorization: Bearer &lt;Token&gt;" https://req-handler.hopto.org/HelloWorld?firstname=John&amp;lastname=Doe</code> </td>
					                  	<td rowspan="2"> HTTP 200 : &lt;html&gt;&lt;head&gt;...&lt;/head&gt;&lt;body&gt;... Hello John Doe ...&lt;/body&gt;&lt;/html&gt;</td>
					                </tr>
				              		<tr>
					                  	<td> <code>curl -H "Authorization: Bearer &lt;Token&gt;" -X POST -d "firstname=John&amp;lastname=Doe" https://req-handler.hopto.org/HelloWorld</code> </td>
					                </tr>


				              		<tr>
					                  	<td> <code>curl -H "Authorization: Bearer &lt;Token&gt;" https://req-handler.hopto.org/HelloWorld</code> </td>
					                  	<td rowspan="2"> HTTP 500 : &lt;html&gt;&lt;head&gt;...&lt;/head&gt;&lt;body&gt;... Firstname required ...&lt;/body&gt;&lt;/html&gt;</td>
					                </tr>
				              		<tr>
					                  	<td> <code>curl -H "Authorization: Bearer &lt;Token&gt;" -X POST https://req-handler.hopto.org/HelloWorld</code> </td>
					                </tr>


					                <tr>
					                  	<td> <code>curl -H "Authorization: Bearer &lt;Token&gt;" https://req-handler.hopto.org/HelloWorld?firstname=John&amp;outformat=xml</code> </td>
					                  	<td rowspan="2">  HTTP 200 : 
					                  		&lt;xml&gt;
												&lt;status&gt; Success &lt;/status&gt;
												&lt;message&gt; Hello Souleymane.&lt;/message&gt;
											&lt;/xml&gt;
										</td>
					                </tr>
				              		<tr>
					                  	<td> <code>curl -H "Authorization: Bearer &lt;Token&gt;" -X POST POST -d "firstname=John" https://req-handler.hopto.org/HelloWorld?outformat=xml</code> </td>
					                </tr>


					                <tr>
					                  	<td> <code>curl -H "Authorization: Bearer &lt;Token&gt;" https://req-handler.hopto.org/HelloWorld?firstname=John&amp;outformat=json</code> </td>
					                  	<td rowspan="2">  HTTP 200 : 
					                  		{
												"status" : "Success",
												"message" : "Hello Souleymane."
											}

										</td>
					                </tr>
				              		<tr>
					                  	<td> <code>curl -H "Authorization: Bearer &lt;Token&gt;" -X POST POST -d "firstname=John" https://req-handler.hopto.org/HelloWorld?outformat=json</code> </td>
					                </tr>

				              	</tbody>
				            </table>
						</p>
						<p>
							If your algorithm works as intended then you can now go ahead and make it available for other users. To do so and discover all the possibilities with the Portal, see <!--<a href="/docs/navigate-on-portal">--><a href="#">Navigate on the Portal</a>. 
						</p>

					</p>
		</div>

		<% include ../../partials/footer %>
	</body>
</html>