					<h3> Creation of an algorithm </h3>
					<p>
						The very first step to using AlgoFab platform is to make sure you have an algorithm at your disposal ready to be deployed at any time. In this section we’ll cover the creation of a simple algorithm and base the rest of the walkthrough on it.
					</p> 
					
					<p>
						We are going to create a very simple SHELL based application. In this example the SHELL script represents your algorithm. <br>
						Note that what we are doing here with SHELL can be done with any other languages and it won't matter. The reason for that is that your application will be call upon through a REST server (spawning processes to launch your algorithm and get its response) as you will see in the next section, then the whole (Server + Application) is packaged as a docker image. Therefore since we only ask of our <a href="#">Contributors</a> some Docker images, assuming your REST Server and your algorithm are well programmed, it makes no difference for us (AlgoFab team) the programming language you used.
					</p>
					
					<p class="alert alert-info">
						Important : Like we just mentionned, AlgoFab works with Docker images, to be more specific we need the Docker Registry link of your image so we can deploy it locally. Therefore if the image(s) you are going to use is (are) private, you will need to add "skante" as collaborator in order for us to access it.
					</p>
					
					<p class="alert alert-info">
						Note : We will often use the terms “application” and “algorithm” interchangeably so don't get confused. 
					</p>
					
					<p id="algo-principle">
						Now back to our HelloWorld application, let's create a file named “hello.sh” inside of which we will write a script that works as the following : 
						<br/>
						<ul>
							<li> It takes three parameters : FIRSTNAME (first name of the person to greet), LASTNAME (last name of the person to greet) and DAYTIME (morning, evening or night) and returns a string corresponding to a greeting. </li>
							<li> If  DAYTIME is given, the script answers with : “Good $DAYTIME $FISTNAME $LASTNAME” otherwise it answers with : “Hello $FISTNAME $LASTNAME” </li>
							<li> One of names (FIRSTNAME or LASTNAME) can be omitted but not both, otherwise the script answers : “Error : At least one name required” </li>
						</ul>
					</p>
					<p>
						Here is the code below (on Ubuntu 16.04) : <br />
						<code id="hello-shell-code" class="open-close-content">
							#!/bin/bash
							for i in "$@"
							do
								case $i in
									-f=*|--firstname=*)
									FIRSTNAME="${i#*=}"
									shift # past argument=value
									;;
									-l=*|--lastname=*)
									LASTNAME="${i#*=}"
									shift # past argument=value
									;;
									-t=*|--daytime=*)
									DAYTIME="${i#*=}"
									shift # past argument=value
									;;
									*)
									# unknown option
									;;
								esac
							done
							if [ "$FIRSTNAME" == "" ] && [ "$LASTNAME" == "" ]; then
								echo "Error : At least one name required"
							elif [ "$DAYTIME" != "" ]; then
								#echo "daytime : $DAYTIME"
								SHOW="Good $DAYTIME"
								if [ "$FIRSTNAME" == "" ]; then
									SHOW="$SHOW $LASTNAME."
								elif [ "$LASTNAME" == "" ]; then
					                SHOW="$SHOW $FIRSTNAME."
								else
									SHOW="$SHOW $FIRSTNAME $LASTNAME."
								fi
								echo $SHOW
							else
								SHOW="Hello"
								if [ "$FIRSTNAME" == "" ]; then
									SHOW="$SHOW $LASTNAME."
								elif [ "$LASTNAME" == "" ]; then
									SHOW="$SHOW $FIRSTNAME."
								else
									SHOW="$SHOW $FIRSTNAME $LASTNAME."
								fi
								echo $SHOW
							fi

						</code>
					</p>
					<p class="alert alert-info">
						Remark : If you are testing this script at home, the arguments are passed to the program by using flags “—firstname=” or “-f=” for FIRSTNAME, “—lastname=” or “-l=” for lastname and “--daytime” or “-t” for DAYTIME.
					</p>
					<p>
						The next step is to create a REST API that will encapsulate this algorithm and allow distant users to call for it. 
					</p>