<!DOCTYPE html>
<html>
  <head>
    <% include partials/head %>
    
  </head>
  <body>
    <% include partials/header %>
    
    <div class="container">
    	<h2>In order to post a new algorithm read the instructions bellow</h2>
      <p>
        The creation of a new algorithm is done by uploading a <b>JSON</b> file containing all the informations required to its post. Bellow an example of what your file can contain followed by explanations :   
      </p>

      <pre>
        <code>
{
  title : "Hello World",
  types : ["Text"],
  description : "&ltp&gtThis is Just an algorthms that'll say \"Hi\" to someone's using his first and last name. &ltbr/&gtPretty cool huh?&lt/p&gt",
  facturation : "0.55",
  keywords : ["text processing", "hello"],
  links : ["mailto:contact@company.fr", "www.facebook.com/company"],
  technical : {
    url : "http://the/path/to/my/container",
    methods : {
      get : {
        allowed : "yes",
        inputs : [ {type : "text", name : "f_name", need : "required"}, {type : "text", name : "l_name", need : "optional"} ],

        output : "text/plain",
        description : "GET on this algo will return \"Hi, John DOE\" if f_name was equal to John and l_name
        was equal to DOE. If only the f_name was specified then only \"Hi, John\" will appear. Note that
        f_name is required therefore if not specfied you'll get an error output as result."
      },
      post : {
        allowed : "yes",
        inputs : [ {type : "text", name : "f_name", need : "required"}, {type : "text", name : "l_name", need : "optional"} ],

        output : "text/plain",
        description : "The POST method works exactly like the GET exept that inputs are given through a form."
      },
      put : {
        allowed : "no",
        inputs : [],
        output : {},
        description : []
      },
      delete : {
        allowed : "no",
        inputs : [],
        output : {},
        description : []
      }
    }
  }
}
        </code>
      </pre>

      <p>
        The informations provided can be put into two categories : the <b>General informations</b> (<b>title</b>, <b>type</b>, <b>description</b>, <b>facturation</b>, <b>keywords</b> and <b>links</b>) which we'll use to present your algorithms to potential users and the <b>Technical information</b> (attribute <b>technical</b> and its dependencies) that we use to generate a forms capable of using you algorithm in graphic mode as well as to present the API of your algorithm for any REST client to use. That being said the explanation of each field is the folliwing : 
        <ul>
          <li>
            <b>title</b> : Represent the title by wich the algorithm will be recognized and called. It is a "String" and is <b>required</b>.
          </li>
          <li>
            <b>types</b> : Represent the types of media file your algorthm process. It is an "Array" of "String" and is optional. Even if optionnal you might want to add it though for search purposes, in that cas not that values agreed upon are "text", "image", "audio" and "video".
          </li>
          <li>
              <b>description</b> : Represent the general description of your algorithm. It is a "String" in html format an is also required.
          </li>
          <li>
              <b>price</b> : Represent the price in Euros per month the user need to pay in order for him to subscribe to the algorithm.
          </li>
          <li>
              <b>keywords</b> : Represent the keywords you want to associate with your algorithm. It is an "Array" of "String" and is optional. It's also there for search purposes but unlike <b>types</b> you're free to put in there whatever String you like.
          </li>
          <li>
              <b>links</b> : Represent the external links people can use for example to get further informations (on the wab site of the author). Note that if available, the contact (email adress) of both the author (the one who is posting the algo) and his company's (on whom's behalf he is posting it) contact will be displayed by default.
          </li>
          <li>
              <b>technical</b> : Represent the technical informations related to the algo. We use it as a "API manual" to explain to potential users how to use it. They can then (after subscription) either test it online or use it in an REST based application. <br/>
              As for the test online we too use the information inside <b>technical</b> to generate a form that'll the request and print the result if available. <br/>
              As for the user testing it locally, he can do so by follwing the API description.<br/>
              Here is now the API description : 
              <ul>
                <li>
                  <b>url</b> : This parameter represents the ephemeral URL created to which you algois available.<br/>
                  ########################### DOESN'T NEED TO BE THERE IN THE LONG RUN ###########################
                </li>
                <li>
                  <b>methods</b> : Contains the HTTP methods (get, post, put and delete) accepted by the algo.<br/>
                  For each methods we specify : 
                  <ul>
                    <li>
                      <b>allowed</b> says if the method is supported. Its type Type is "String" (being either "yes" or "no") and is required.
                    </li>
                    <li>
                      <b>inputs</b> the inputs for that method. Its type Type is "Array" of "object" where each object is described by : type (String being "text" or "file"), name (String, will be used to generate this particular field in a form or to send a request) and need (tells if the input is optionnal or otherwise). <b>inputs</b> is optionnal (if no input is required for this method).
                    </li>
                    <li>
                      <b>outputs</b> : the outputs to be expected. It is a "String" wich type of return to expect ("text/plain", "text/html", "image/jpeg", "audio/mp3", "video/mpeg", ...).
                    </li>
                    <li>
                      <b>description</b> : Explains more the role of each parameter, the use for the algo and what to expect. Its type is html "String".
                    </li>
                  </ul>
                </li>
              </ul>
          </li>
        </ul>
        <b style="text-decoration: underline;">Note</b> : Some fields will be added to those quoted above namely : <b>hidden</b> (will be used to hide the algo from listing so that only it's author ca access it), author (will be used to store information relator to the poster : <b>email</b>, <b>company</b>, <b>companyContact</b> and <b>username</b>) and date (will store the date on which the registration occurred).<br/>
        Bellow is the form to use to upload your JSON file : 
      </p>
      <div class="col-sm-offset-2 col-sm-8" id="new_upload_form">
        <form method="post" enctype="multipart/form-data">
          <div class="form-group row">
            <div class="col-sm-offset-4 col-sm-4">
              <input type="file" name="newAlgoData"/><br/><br/>
              <button type="submit" class="btn btn-primary"> Upload </button>
            </div>
          </div>
        </form>
      </div>
    </div>
    
    <% include partials/footer.ejs %>
  </body>
</html>
