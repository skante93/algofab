
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-dns
  namespace: kube-system
data:
  # stubDomains: |
  #   {"tera-mkpl.fr": ["10.96.0.10"]}
  upstreamNameservers: |
    ["8.8.8.8", "8.8.4.4"]


---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: algofab-admin-role
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'

---

apiVersion: v1
kind: Namespace
metadata:
  name: algofab

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: algofab
  namespace: algofab

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: algofab-role-binding
  namespace: algofab
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: algofab-admin-role
subjects:
- kind: ServiceAccount
  name: algofab
  namespace: algofab

---

apiVersion: v1
kind: Service
metadata:
  name: ldap
  namespace: algofab
spec:
  selector:
    app: ldap
  ports:
    - targetPort: 80
      port: 80
      name: http
    - targetPort: 389
      port: 389
      name: ldap


---

apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: algofab
spec:
  selector:
    app: mongo
  ports:
    - targetPort: 27017
      port: 27017

---

apiVersion: v1
kind: Service
metadata:
  name: im
  namespace: algofab
spec:
  selector:
    app: im
  ports:
    - targetPort: 32080
      port: 80

---

apiVersion: v1
kind: Service
metadata:
  name: rh
  namespace: algofab
spec:
  selector:
    app: rh
  ports:
    - targetPort: 3000
      port: 80

---

apiVersion: v1
kind: Service
metadata:
  name: portal
  namespace: algofab
spec:
  type: NodePort
  selector:
    app: portal
  ports:
    - targetPort: 8080
      port: 80
      nodePort: 32090

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ldap-config
  namespace: algofab
data:
  LDAP_SERVER_NAME: "Algofab LDAP"
  LDAP_BASE_DN: "dc=ldap,dc=algofab,dc=fr"
  LDAP_DEBCONF_DOMAIN: "ldap.algofab.fr"
  LDAP_DEBCONF_ORG: "TeraLab IMT"
  LDAP_PASSWORD: "admin"

---

apiVersion: v1
kind: Pod
metadata:
  name: ldap
  namespace: algofab
  labels:
    app: ldap
spec:
  securityContext:
    fsUser: 1002
    fsGroup: 1002
  serviceAccountName: algofab
  volumes:
    - name: ldap-dump
      hostPath:
        path: /home/skante/kube_algofab/data/ldap
  #   - name: var-lib-ldap
  #     hostPath:
  #       path: /home/skante/kube_algofab/data/ldap/var_lib_ldap
  containers:
    - name: ldap
      image: skante/ldap
      imagePullPolicy: Always
      envFrom:
        - configMapRef:
            name: ldap-config
      volumeMounts:
        - mountPath: /myldapdumps
          name: ldap-dump
      #   - mountPath: /var/lib/ldap
      #     name: var-lib-ldap

---

apiVersion: v1
kind: Pod
metadata:
  name: mongo
  namespace: algofab
  labels:
    app: mongo
spec:
  serviceAccountName: algofab
  securityContext:
    runAsUser: 999
  volumes:
  - name: db-vol
    hostPath:
      path: /home/skante/kube_algofab/data/mongo
  containers:
  - name: db
    image: mongo
    imagePullPolicy: Always
    volumeMounts:
    - mountPath: /data/db
      name: db-vol

---

apiVersion: v1
kind: Pod
metadata:
  name: im
  namespace: algofab
  labels:
    app: im
spec:
  serviceAccountName: algofab
  volumes:
    - name: im-code-vol
      hostPath:
        path: /home/skante/kube_algofab/docker/algofab/
  containers:
    - name: im
      image: skante/tlmkpl
      imagePullPolicy: Always
      command: ["./run.sh", "IM-Server"]
      volumeMounts:
        - mountPath: /home/admin/algofab/
          name: im-code-vol

---

apiVersion: v1
kind: Pod
metadata:
  name: rh
  namespace: algofab
  labels:
    app: rh
spec:
  serviceAccountName: algofab
  volumes:
    - name: rh-code-vol
      hostPath:
        path: /home/skante/kube_algofab/docker/algofab/
  containers:
    - name: rh
      image: skante/tlmkpl
      imagePullPolicy: Always
      command: ["./run.sh", "RH-Server"]
      volumeMounts:
        - mountPath: /home/admin/algofab/
          name: rh-code-vol

---

apiVersion: v1
kind: Pod
metadata:
  name: portal
  namespace: algofab
  labels:
    app: portal
spec:
  serviceAccountName: algofab
  volumes:
    - name: portal-code-vol
      hostPath:
        path: /home/skante/kube_algofab/docker/algofab/
        type: Directory
  containers:
    - name: portal
      image: skante/tlmkpl
      imagePullPolicy: Always
      command: ["./run.sh", "Portal"]
      envFrom:
        - configMapRef:
            name: ldap-config
      volumeMounts:
        - mountPath: /home/admin/algofab/
          name: portal-code-vol

--- 

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: main-access
  namespace: algofab
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  # backend:
  #   serviceName: portal
  #   servicePort: 80
  rules:
  - host: ws37-kube-dev-portal.tl.teralab-datascience.fr
    http:
      paths:
      - path: /
        backend:
          serviceName: portal
          servicePort: 80
  - host: ws37-kube-dev-ldap.tl.teralab-datascience.fr
    http:
      paths:
      - path: /
        backend:
          serviceName: ldap
          servicePort: 80